{"ast":null,"code":"var _jsxFileName = \"/Users/ehtisham/Desktop/sideLabs448/password_validator/src/components/passwordbox.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styles from '../components/passwordbox.module.css';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Passwordbox() {\n  _s();\n  const password1 = useRef();\n  const password2 = useRef();\n  //you have to use useref to use variables from browser to code\n\n  function Calculator() {\n    const passwordOnelen = password1.current.value.length;\n    const passwordtwolen = password2.current.value.length;\n    //I need to have variablename.curent to access the variable generated by useRef\n    //also I can use variablename.current.value to get it as a string output\n    //saving the length data in a variable called passwordonelen and ...\n\n    if (passwordOnelen === 0 && passwordtwolen === 0) {\n      alert('Please enter a password ');\n    } else if (password1.current.value === password2.current.value) {\n      alert('Passwords Matched!');\n    } else {\n      alert('Passwords did not match!');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.passwordbox,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textboxes,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: 'password',\n        ref: password1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: 'password',\n        ref: password2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Calculator,\n      children: \"Check \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Passwordbox, \"tZdeovNhcYxD307Nco3zOzozTZ4=\");\n_c = Passwordbox;\nexport default Passwordbox;\nvar _c;\n$RefreshReg$(_c, \"Passwordbox\");","map":{"version":3,"names":["React","styles","useRef","Passwordbox","password1","password2","Calculator","passwordOnelen","current","value","length","passwordtwolen","alert","passwordbox","textboxes"],"sources":["/Users/ehtisham/Desktop/sideLabs448/password_validator/src/components/passwordbox.js"],"sourcesContent":["import React from 'react';\nimport styles from '../components/passwordbox.module.css';\nimport {useRef} from 'react';\n\nfunction Passwordbox() {\n    const password1 = useRef();\n    const password2 = useRef();\n    //you have to use useref to use variables from browser to code\n    \n    function Calculator(){\n        const passwordOnelen=password1.current.value.length;\n        const passwordtwolen=password2.current.value.length;\n        //I need to have variablename.curent to access the variable generated by useRef\n        //also I can use variablename.current.value to get it as a string output\n        //saving the length data in a variable called passwordonelen and ...\n\n      if((passwordOnelen===0) && (passwordtwolen===0))\n      {\n        alert('Please enter a password ');\n      }\n      else if(password1.current.value === password2.current.value)\n      {\n        alert('Passwords Matched!');\n      }\n      else\n      {\n        alert('Passwords did not match!')\n      }\n         \n     }\n  return (\n   \n    <div className={styles.passwordbox}>\n        <div className={styles.textboxes}>\n        <p>Password: </p>\n        <input type={'password'} ref={password1} ></input>\n        <br/>\n        <p >Confirm Password:</p>\n        <input type={'password'} ref={password2} ></input>\n        </div>\n        <br/>\n        <button onClick={Calculator}>Check </button>\n\n    </div>\n    \n  );\n}\n\nexport default Passwordbox;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sCAAsC;AACzD,SAAQC,MAAM,QAAO,OAAO;AAAC;AAE7B,SAASC,WAAW,GAAG;EAAA;EACnB,MAAMC,SAAS,GAAGF,MAAM,EAAE;EAC1B,MAAMG,SAAS,GAAGH,MAAM,EAAE;EAC1B;;EAEA,SAASI,UAAU,GAAE;IACjB,MAAMC,cAAc,GAACH,SAAS,CAACI,OAAO,CAACC,KAAK,CAACC,MAAM;IACnD,MAAMC,cAAc,GAACN,SAAS,CAACG,OAAO,CAACC,KAAK,CAACC,MAAM;IACnD;IACA;IACA;;IAEF,IAAIH,cAAc,KAAG,CAAC,IAAMI,cAAc,KAAG,CAAE,EAC/C;MACEC,KAAK,CAAC,0BAA0B,CAAC;IACnC,CAAC,MACI,IAAGR,SAAS,CAACI,OAAO,CAACC,KAAK,KAAKJ,SAAS,CAACG,OAAO,CAACC,KAAK,EAC3D;MACEG,KAAK,CAAC,oBAAoB,CAAC;IAC7B,CAAC,MAED;MACEA,KAAK,CAAC,0BAA0B,CAAC;IACnC;EAED;EACH,oBAEE;IAAK,SAAS,EAAEX,MAAM,CAACY,WAAY;IAAA,wBAC/B;MAAK,SAAS,EAAEZ,MAAM,CAACa,SAAU;MAAA,wBACjC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eACjB;QAAO,IAAI,EAAE,UAAW;QAAC,GAAG,EAAEV;MAAU;QAAA;QAAA;QAAA;MAAA,QAAU,eAClD;QAAA;QAAA;QAAA;MAAA,QAAK,eACL;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAyB,eACzB;QAAO,IAAI,EAAE,UAAW;QAAC,GAAG,EAAEC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5C,eACN;MAAA;MAAA;MAAA;IAAA,QAAK,eACL;MAAQ,OAAO,EAAEC,UAAW;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB;EAAA;IAAA;IAAA;IAAA;EAAA,QAE1C;AAGV;AAAC,GA1CQH,WAAW;AAAA,KAAXA,WAAW;AA4CpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}